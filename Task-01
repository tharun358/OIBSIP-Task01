# OIBSIP-Task01

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the dataset
df = pd.read_csv('Iris.csv')

# Drop the Id column if it exists
if 'Id' in df.columns:
    df = df.drop('Id', axis=1)

# Encode the Species column to numerical labels
le = LabelEncoder()
df['Species'] = le.fit_transform(df['Species'])

# Split features and labels
X = df.drop('Species', axis=1)
y = df['Species']

# Split into train and test sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# Initialize and train the classifier
clf = RandomForestClassifier(random_state=42)
clf.fit(X_train, y_train)

# Predict on test data
y_pred = clf.predict(X_test)

# Evaluate the classifier
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred, target_names=le.classes_))
